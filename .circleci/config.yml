# .circleci/config.yml
version: 2
jobs:

  build:
    machine: true
    steps:
      - checkout

      - run:
          name: Create Docker Compose configuration file
          command: |
            echo "POSTGRES_USER=postgres" >> ./.env
            echo "POSTGRES_PASSWORD=password" >> ./.env
            echo "DATABASE_URL=postgres://postgres:password@db:5432/data_quality" >> ./.env

      - run:
          name: Build Docker images
          command: |
            docker volume create data-quality-db-volume
            docker-compose -f docker-compose.yml -f docker-compose.test.yml build db
            docker ps -a

      - run:
          name: Install Unix ODBC
          command: |
            sudo apt-get update
            sudo apt-get install -y g++ unixodbc-dev

      - run:
          name: Install PostgreSQL ODBC driver
          command: |
            sudo apt-get install -y odbc-postgresql

      - run:
          name: Move ODBC configuration file
          command: |
            sudo cp ./scripts/init/odbcinst.ini /etc
            sudo cp ./scripts/init/odbcinst.ini /usr/local/etc/
            echo "/etc/odbcinst.ini"
            cat /etc/odbcinst.ini
            echo "/etc/odbc.ini"
            cat /etc/odbc.ini
            echo "/usr/local/etc/odbcinst.ini"
            cat /usr/local/etc/odbcinst.ini
            echo "/usr/local/etc/odbc.ini"
            cat /usr/local/etc/odbc.ini

      - run:
          name: Install Python environment
          command: |
            sudo apt-get install software-properties-common
            sudo add-apt-repository ppa:deadsnakes/ppa
            sudo apt-get update
            sudo apt-get install python3.6
            sudo apt-get install python3-pip

      - run:
          name: Install Python dependencies
          command: |
            sudo pip3 install --upgrade pip
            sudo pip install pyodbc
            sudo pip3 install pyodbc
            sudo pip3 install nose2 --ignore-installed six
            sudo pip3 list

      - run:
          name: Test Pyodbc connection to postgreSQL
          command: |
            echo 'export PYTHONPATH=./test:$PYTHONPATH' >> $BASH_ENV
            source $BASH_ENV
            nose2 --plugin nose2.plugins.junitxml --junit-xml -v

      - store_artifacts:
          path: test/junit/test-results.xml
          destination: test-results

      - store_test_results:
          path: test
